{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-14T08:51:54.896Z",
    "end": "2021-12-14T08:51:56.724Z",
    "duration": 1828,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d3dc8422-a18a-428a-937c-5eb162b16416",
      "title": "",
      "fullFile": "cypress/integration/veriff-demo-tests/api/TC_02_sessionPositiveScenarios.spec.js",
      "file": "cypress/integration/veriff-demo-tests/api/TC_02_sessionPositiveScenarios.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e9310453-0896-4221-97f3-4db32e45b193",
          "title": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'PASSPORT'",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Configures the user data and gets the session token.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'PASSPORT' Configures the user data and gets the session token.",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.config().baseUrl,\n  headers: {},\n  body: {\n    \"full_name\": _apiSessionData.default.fullName,\n    \"lang\": _apiSessionData.default.language,\n    \"document_country\": _apiSessionData.default.documentCountry,\n    \"document_type\": docTypeElem,\n    \"additionalData\": {\n      \"isTest\": false\n    }\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.sessionToken).to.be.a(\"string\");\n  expect(res.body.integrationUrl).to.eq(Cypress.env('integrationUrl'));\n  cy.task('set', {\n    name: 'sessionToken',\n    value: res.body.sessionToken\n  });\n});",
              "err": {},
              "uuid": "31180be8-d5ec-43c5-9f02-191ab46dd9d5",
              "parentUUID": "e9310453-0896-4221-97f3-4db32e45b193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'PASSPORT' Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get session token  \ncy.task('get', 'sessionToken').then(sessionToken => {\n  sessionToken;\n  cy.request({\n    method: 'GET',\n    url: `${Cypress.env('integrationUrl')}${Cypress.env('sessionApi')}`,\n    headers: {\n      'Authorization': `Bearer ${sessionToken}`\n    }\n  }).then(res => {\n    expect(res.status).to.eq(200);\n    expect(res.body.id).to.be.a(\"string\");\n    expect(res.body.status).to.deep.equal('created');\n    expect(res.body.initData.language).to.deep.equal(_apiSessionData.default.language);\n    expect(res.body.initData.preselectedDocument.country).to.deep.equal(_apiSessionData.default.documentCountry);\n    expect(res.body.initData.preselectedDocument.type).to.deep.equal(docTypeElem);\n  });\n});",
              "err": {},
              "uuid": "b46b7a5a-04cd-4f57-b7bc-350f541f0713",
              "parentUUID": "e9310453-0896-4221-97f3-4db32e45b193",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31180be8-d5ec-43c5-9f02-191ab46dd9d5",
            "b46b7a5a-04cd-4f57-b7bc-350f541f0713"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a89046a-3851-43ca-bc3e-e0a1fe77466d",
          "title": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'ID_CARD'",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Configures the user data and gets the session token.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'ID_CARD' Configures the user data and gets the session token.",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.config().baseUrl,\n  headers: {},\n  body: {\n    \"full_name\": _apiSessionData.default.fullName,\n    \"lang\": _apiSessionData.default.language,\n    \"document_country\": _apiSessionData.default.documentCountry,\n    \"document_type\": docTypeElem,\n    \"additionalData\": {\n      \"isTest\": false\n    }\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.sessionToken).to.be.a(\"string\");\n  expect(res.body.integrationUrl).to.eq(Cypress.env('integrationUrl'));\n  cy.task('set', {\n    name: 'sessionToken',\n    value: res.body.sessionToken\n  });\n});",
              "err": {},
              "uuid": "77487635-c5d7-4919-8532-92e26536b6e6",
              "parentUUID": "8a89046a-3851-43ca-bc3e-e0a1fe77466d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'ID_CARD' Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get session token  \ncy.task('get', 'sessionToken').then(sessionToken => {\n  sessionToken;\n  cy.request({\n    method: 'GET',\n    url: `${Cypress.env('integrationUrl')}${Cypress.env('sessionApi')}`,\n    headers: {\n      'Authorization': `Bearer ${sessionToken}`\n    }\n  }).then(res => {\n    expect(res.status).to.eq(200);\n    expect(res.body.id).to.be.a(\"string\");\n    expect(res.body.status).to.deep.equal('created');\n    expect(res.body.initData.language).to.deep.equal(_apiSessionData.default.language);\n    expect(res.body.initData.preselectedDocument.country).to.deep.equal(_apiSessionData.default.documentCountry);\n    expect(res.body.initData.preselectedDocument.type).to.deep.equal(docTypeElem);\n  });\n});",
              "err": {},
              "uuid": "2d16b5c7-9bb3-4c6b-bd70-813d9b73dee2",
              "parentUUID": "8a89046a-3851-43ca-bc3e-e0a1fe77466d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77487635-c5d7-4919-8532-92e26536b6e6",
            "2d16b5c7-9bb3-4c6b-bd70-813d9b73dee2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 382,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1846b65c-92a2-45e7-9ce3-be059ed8dbc6",
          "title": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'RESIDENCE_PERMIT'",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Configures the user data and gets the session token.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'RESIDENCE_PERMIT' Configures the user data and gets the session token.",
              "timedOut": null,
              "duration": 405,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.config().baseUrl,\n  headers: {},\n  body: {\n    \"full_name\": _apiSessionData.default.fullName,\n    \"lang\": _apiSessionData.default.language,\n    \"document_country\": _apiSessionData.default.documentCountry,\n    \"document_type\": docTypeElem,\n    \"additionalData\": {\n      \"isTest\": false\n    }\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.sessionToken).to.be.a(\"string\");\n  expect(res.body.integrationUrl).to.eq(Cypress.env('integrationUrl'));\n  cy.task('set', {\n    name: 'sessionToken',\n    value: res.body.sessionToken\n  });\n});",
              "err": {},
              "uuid": "79ce1375-0ee6-4283-862a-46024a26cd1b",
              "parentUUID": "1846b65c-92a2-45e7-9ce3-be059ed8dbc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'RESIDENCE_PERMIT' Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "timedOut": null,
              "duration": 194,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get session token  \ncy.task('get', 'sessionToken').then(sessionToken => {\n  sessionToken;\n  cy.request({\n    method: 'GET',\n    url: `${Cypress.env('integrationUrl')}${Cypress.env('sessionApi')}`,\n    headers: {\n      'Authorization': `Bearer ${sessionToken}`\n    }\n  }).then(res => {\n    expect(res.status).to.eq(200);\n    expect(res.body.id).to.be.a(\"string\");\n    expect(res.body.status).to.deep.equal('created');\n    expect(res.body.initData.language).to.deep.equal(_apiSessionData.default.language);\n    expect(res.body.initData.preselectedDocument.country).to.deep.equal(_apiSessionData.default.documentCountry);\n    expect(res.body.initData.preselectedDocument.type).to.deep.equal(docTypeElem);\n  });\n});",
              "err": {},
              "uuid": "0d64e3a3-1aac-4efc-94a1-510cf338a6f8",
              "parentUUID": "1846b65c-92a2-45e7-9ce3-be059ed8dbc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79ce1375-0ee6-4283-862a-46024a26cd1b",
            "0d64e3a3-1aac-4efc-94a1-510cf338a6f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 599,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06df6ee8-b096-411a-8b87-a6122d564947",
          "title": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'DRIVERS_LICENSE'",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Configures the user data and gets the session token.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'DRIVERS_LICENSE' Configures the user data and gets the session token.",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: Cypress.config().baseUrl,\n  headers: {},\n  body: {\n    \"full_name\": _apiSessionData.default.fullName,\n    \"lang\": _apiSessionData.default.language,\n    \"document_country\": _apiSessionData.default.documentCountry,\n    \"document_type\": docTypeElem,\n    \"additionalData\": {\n      \"isTest\": false\n    }\n  }\n}).then(res => {\n  expect(res.status).to.eq(200);\n  expect(res.body.sessionToken).to.be.a(\"string\");\n  expect(res.body.integrationUrl).to.eq(Cypress.env('integrationUrl'));\n  cy.task('set', {\n    name: 'sessionToken',\n    value: res.body.sessionToken\n  });\n});",
              "err": {},
              "uuid": "a9e49155-1e99-4411-b7ec-2b5d99d27c80",
              "parentUUID": "06df6ee8-b096-411a-8b87-a6122d564947",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "fullTitle": "Positve API scenarios with the conf: 'Toomas Lõokene', 'ee', 'EE', 'DRIVERS_LICENSE' Gets the session ID and initData & confirms that session detaila are correct in the response.",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get session token  \ncy.task('get', 'sessionToken').then(sessionToken => {\n  sessionToken;\n  cy.request({\n    method: 'GET',\n    url: `${Cypress.env('integrationUrl')}${Cypress.env('sessionApi')}`,\n    headers: {\n      'Authorization': `Bearer ${sessionToken}`\n    }\n  }).then(res => {\n    expect(res.status).to.eq(200);\n    expect(res.body.id).to.be.a(\"string\");\n    expect(res.body.status).to.deep.equal('created');\n    expect(res.body.initData.language).to.deep.equal(_apiSessionData.default.language);\n    expect(res.body.initData.preselectedDocument.country).to.deep.equal(_apiSessionData.default.documentCountry);\n    expect(res.body.initData.preselectedDocument.type).to.deep.equal(docTypeElem);\n  });\n});",
              "err": {},
              "uuid": "a9455654-b75f-4a6b-8edc-7ff8009413c4",
              "parentUUID": "06df6ee8-b096-411a-8b87-a6122d564947",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9e49155-1e99-4411-b7ec-2b5d99d27c80",
            "a9455654-b75f-4a6b-8edc-7ff8009413c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 418,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportFilename": "testReport"
      },
      "version": "6.0.1"
    }
  }
}